import autograd.numpy as np
from autograd import grad
from autograd import elementwise_grad as egrad


def relu(X):
	return np.maximum(X, 0)
def nn(W1,W2):
	W1X = relu(np.matmul(W1, X))
	return relu(np.matmul(W2, W1X))
def cost(W1,W2):
	return np.sum((nn(W1,W2) - y)**2)


grad_cost = grad(cost)
W1 = np.random.randn(4,2)
W2 = np.random.randn(1,4)
X = np.array([[0.0,1.0],[1.0,1.0],[0.0,0.0],[1.0,0.0]]).T
y = np.array([1,0,0,1])
print(grad_cost(W1,W2))
lr = 1e-2
print(cost(W))
for i in range(100):
	W = W - lr * grad_cost(W)
	print(cost(W))
print('final:',W)
print(nn(W))
